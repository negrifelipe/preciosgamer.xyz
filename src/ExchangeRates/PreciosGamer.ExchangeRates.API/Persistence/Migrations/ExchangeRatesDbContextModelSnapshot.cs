// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PreciosGamer.ExchangeRates.API.Persistence;

#nullable disable

namespace PreciosGamer.ExchangeRates.API.Persistence.Migrations
{
    [DbContext(typeof(ExchangeRatesDbContext))]
    partial class ExchangeRatesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PreciosGamer.ExchangeRates.API.Persistence.Entities.ExchangeRateEntity", b =>
                {
                    b.Property<string>("BaseCurrencyCode")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("TargetCurrencyCode")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("ConversionRate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("BaseCurrencyCode", "TargetCurrencyCode", "Date");

                    b.ToTable("ExchangeRates", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
